# -*- coding: utf-8 -*-
"""2_LabCycle2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H1TOcUOOPU6-B8cqKMZnY1o040JEaD6P

2. Write a program to read a string containing numbers separated by a 
space and convert it as a list of integers. Perform the following 
operations on it.
 1. Rotate elements in a list by 'k' position to the right
 2. Convert the list into a tuple using list comprehension
 3. Remove all duplicates from the tuple and convert them 
into a list again.
 4. Create another list by putting the results of the evaluation 
of the function 𝑓(𝑥) = (𝑥^2 – 𝑥) with each element in the 
final list
 5. After sorting them individually, merge the two lists to 
create a single sorted list.
"""

#Reading a string containing numbers seperated by a space and converting them as a list of integers
str1="12 10 12 4 5 6 7 8 9 10 11"
len1=len(str1)
lst=[]
i=0
while i<len1:
  num=0
  while str1[i]!=" ":     
    num=num*10+int(str1[i])
    i+=1
    if i==len1:
      break
  i+=1
  lst.append(num)
print(lst)

# Rotating elements in the list by k postions
k=int(input("enter the number postion you want to shift: "))
while k>0:
  lst.insert(0,lst[-1])
  lst.pop()
  k-=1
print(lst)

# Conversion of list into tuple using list comprehension
tup=tuple(lst)
print(tup)
print(type(tup))

# Removing  all duplicates from the tuple and converting them into a list
unify=set(tup)
lst=list(unify)
print(lst)

#  Creating another list by putting the evaluation of the function f(x)=x^2-x with each element in the final list
n=int(input("input enter the element to f"))
y=[]
for x in range(n+1):
  y.append(x**2-x)

# Sorting and Merging
lst.sort()
y.sort()
new_list=lst+y
new_list.sort()
print(new_list)